services:
  backend:
    build: backend/
    environment:
      MYSQL_HOST: ${MYSQL_HOST:-mysql_db}
      MYSQL_PORT: ${MYSQL_PORT:-3306}
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: tradeoffer_db
      JWT_SECRET_TOKEN: ${JWT_SECRET_TOKEN:-your_strong_secret_key_here}
      JWT_EXPIRES_IN: 1d
      CORS_ORIGIN_REGEX: http([s])?:\/\/localhost:3002
    ports:
      - "3001:3001"
    depends_on:
      mysql_db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    environment:
      SERVER_ORIGIN: ${SERVER_ORIGIN:-http://localhost:3001}
    ports:
      - "3002:3002"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002"]
      interval: 30s
      timeout: 10s
      retries: 3

  mysql_db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: tradeoffer_db
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    command: 
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 5s
      timeout: 10s
      retries: 10
    volumes:
      - mysql_data:/var/lib/mysql

  adminer:
    image: adminer
    restart: always
    environment:
      ADMINER_DEFAULT_DB_DRIVER: mysql
      ADMINER_DEFAULT_SERVER: mysql_db
      ADMINER_PLUGINS: tables-filter tinymce
    ports:
      - "30000:8080"
    depends_on:
      - mysql_db
    profiles: ["dev"]

volumes:
  mysql_data: